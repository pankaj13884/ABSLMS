@using ABS_LMS.Models.Security
@using PagedList.Mvc
@model ABS_LMS.Models.EmployeeIndexViewModel

@{
    ViewBag.Title = "Index";
}
<div class="row padding-left-20 employeelist">
    <h1>Employees</h1>
    <div class="panel panel-default">
        <div class="panel-heading">@*Employees*@ &nbsp;</div>
        <div class="panel-body">
            <p>

                @Html.ActionLink("Create New", "Create",new {@id="Create"} ,new {@class = "btn btn-default newemp"})
            </p>

            @using (Html.BeginForm())
            {
            <div class="">
                <div class="col-md-3">
                    <input type="text" name="searchKeyword" class="searchboxset" placeholder="Search Employees" value="@Model.SearchKeyword" />
                </div>
                <div class="col-md-2">
                    <input type="submit" id="btnsearch" value="Search">
                </div>
            </div>
            }


            <table class="table table-bordered ">
                <tr>
                    <th>
                        @Html.ActionLink("Employee Code", "Index", new {sortOrder = "EmployeeCode", sortOrderDesc = ViewBag.SortOrderDesc, searchKeyword = Model.SearchKeyword})
                    </th>
                    <th>
                        @Html.ActionLink("First Name", "Index", new {sortOrder = "FirstName", sortOrderDesc = ViewBag.SortOrderDesc, searchKeyword = Model.SearchKeyword})
                    </th>
                    <th>
                        @Html.ActionLink("Last Name", "Index", new {sortOrder = "LastName", sortOrderDesc = ViewBag.SortOrderDesc, searchKeyword = Model.SearchKeyword})
                    </th>
                    <th>
                        @Html.ActionLink("Gender", "Index", new {sortOrder = "Gender", sortOrderDesc = ViewBag.SortOrderDesc, searchKeyword = Model.SearchKeyword})
                    </th>
                    @*<th>
                        @Html.ActionLink("Mobile No", "Index", new {sortOrder = "MobileNo", sortOrderDesc = ViewBag.SortOrderDesc, searchKeyword = Model.SearchKeyword})
                    </th>*@
                    <th>
                        @Html.ActionLink("Client", "Index", new {sortOrder = "Client", sortOrderDesc = ViewBag.SortOrderDesc, searchKeyword = Model.SearchKeyword})
                    </th>
                    <th>
                        @Html.ActionLink("Designation", "Index", new {sortOrder = "Designation", sortOrderDesc = ViewBag.SortOrderDesc, searchKeyword = Model.SearchKeyword})
                    </th>
                    <th>
                        @Html.ActionLink("Leaving Date", "Index", new {sortOrder = "LeavingDateUTC", sortOrderDesc = ViewBag.SortOrderDesc, searchKeyword = Model.SearchKeyword})
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model.EmployeeDetail)
                {


                    <tr class='@(item.LeavingDateUTC.HasValue ? "leaving-date" : "")'>
                        <td>
                            @item.EmployeeCode
                        </td>
                        <td>
                            @item.FirstName
                        </td>
                        <td>
                            @item.LastName
                        </td>
                        <td>
                            @item.Gender
                        </td>
                    @*<td class="word-break">*@
                        @*<td >
                            @item.MobileNo
                        </td>*@
                        <td>
                            @item.Client
                        </td>
                        <td>
                            @item.Designation
                        </td>
                        <td>
                            @string.Format("{0:dd-MMM-yyyy}", item.LeavingDateUTC)
                        </td>
                        <td class="col-lg-3">
                            @if (HttpCurrentUser.IsHR || HttpCurrentUser.IsAdmin)
                            {
                                <input type="button" value="Archive" id="@item.EmployeeId" onclick=" deleteEmp(@item.EmployeeId, '@item.FirstName') " class="deleteEmp btn btn-default"/>
                            }
                            @if (HttpCurrentUser.IsHR || HttpCurrentUser.IsAdmin)
                            {
                                @Html.ActionLink("Edit", "Edit", new {id = item.EmployeeId}, new {@class = "linktobtn editbtnlink"})

                            }
                            @Html.ActionLink("Details", "Details", new {id = item.EmployeeId}, new {@class = "linktobtn"})


                            <input type="text" id="EmpIdvalue" style="display: none;"/>
                        </td>
                    </tr>
                }
            </table>


            <div>
                Page @(Model.EmployeeDetail.PageCount < Model.EmployeeDetail.PageNumber ? 0 : Model.EmployeeDetail.PageNumber) of @Model.EmployeeDetail.PageCount
            </div>
            @Html.PagedListPager(Model.EmployeeDetail, pagenumber => Url.Action("Index", new { id = HttpCurrentUser.EmployeeId, searchKeyword = Model.SearchKeyword, sortOrder = ViewBag.SortOrder, sortOrderDesc = !ViewBag.SortOrderDesc, pagenumber }))



        </div>
    </div>
    <div class="modal fade" id="EmployeeModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4>Confirmation</h4>
                </div>
                <div class="modal-body">
                    Are you sure you wish to archive <label id="employeeName"></label>?
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnCancel" class="btn modalpopupbtn" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="btnOK" class="btn modalpopupbtn">Ok</button> &nbsp;&nbsp;

                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
<script type="text/javascript">
    function deleteEmp(empId,name) {

        $('#EmpIdvalue').text('');
        $('#employeeName').text('');
        $('#EmpIdvalue').text(empId);
        $('#employeeName').text(name);
        $("#EmployeeModal").modal('show');
    }


    $("#btnOK").click(function () {
        $("#EmployeeModal").modal('hide');
        var empId = $('#EmpIdvalue').text();
        onBegin();
        $.ajax({
            type: "POST",
            url: "/Employee/Delete",
            data: { id: empId },
            dataType: 'json',
            success: function (response) {
                if (parseInt(response) > 0) {
                    window.location.reload();
                }
            },
            error: function () {
                onComplete();
            }
        });
    });

    $("#btnCancel").click(function () {
        $("#EmployeeModal").modal('hide');

    });
    $(document).ready(function () {
        $('.nav #employee').addClass('active');
    });
</script>
}
