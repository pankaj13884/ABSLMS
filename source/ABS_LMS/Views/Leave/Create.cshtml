@using ABS_LMS.Models.Security
@model ABS_LMS.Models.EmployeeLeaveViewModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "Leave", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12">
            <div class="col-md-6 textboxsize padding-left-row">
                <h1>Request Leave</h1>

                <div class="panel panel-default">
                    <div class="panel-heading">&nbsp;</div>
                    <div class="panel-body">
                        @Html.ValidationSummary(false, "", new { @class = " alert alert-warning" })
                        @Html.HiddenFor(m => m.IsSave)
                        <div class="form-group" style="display: none;">
                            @Html.LabelFor(model => model.EmployeeLeaveDetails.EmployeeId, htmlAttributes: new { @class = " col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.EmployeeLeaveDetails.EmployeeId, new { htmlAttributes = new { @class = "" } })
                                @*@Html.ValidationMessageFor(model => model.EmployeeLeaveDetails.EmployeeId, "", new { @class = "pull-left alert alert-warning " })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeLeaveDetails.LeaveStartDate, htmlAttributes: new { @class = " col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.EmployeeLeaveDetails.LeaveStartDate, new { @class = "", @Value = "" })
                                @*@Html.ValidationMessageFor(model => model.EmployeeLeaveDetails.LeaveStartDate, "", new { @class = "pull-left alert alert-warning " })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeLeaveDetails.LeaveEndDate, htmlAttributes: new { @class = " col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.EmployeeLeaveDetails.LeaveEndDate, new { @class = "", @Value = "" })
                                @*@Html.ValidationMessageFor(model => model.EmployeeLeaveDetails.LeaveEndDate, "", new { @class = "pull-left alert alert-warning " })*@
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="col-md-3" style="padding-left: 0">@Html.Label("HalfDay", htmlAttributes: new { @class = " col-md-5" })</div>
                                    <div class="col-md-2 col-lg-push-1" style="top: 15px; left: 20px">@Html.CheckBoxFor(model => model.EmployeeLeaveDetails.IsHalfDay, new { @class = "", @disabled = true })</div>
                                    <div class="col-md-7">@Html.HiddenFor(model => model.EmployeeLeaveDetails.HalfDayDateUTC, new { @class = "form-control", @Value = "" })</div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeLeaveDetails.LeaveTypeId, htmlAttributes: new { @class = " col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.EmployeeLeaveDetails.LeaveTypeId, Model.LeaveType, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeLeaveDetails.NoOfDays, htmlAttributes: new { @class = " col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.EmployeeLeaveDetails.NoOfDays, new { @readonly = "readonly" })
                                @*@Html.ValidationMessageFor(model => model.EmployeeLeaveDetails.NoOfDays, "", new { @class = "pull-left alert alert-warning " })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeLeaveDetails.Reason, htmlAttributes: new { @class = " col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.EmployeeLeaveDetails.Reason, new { htmlAttributes = new { @class = "", @cols = 80, @rows = 5 } })
                            </div>
                        </div>

                        <div class="form-group" style="display: none;">
                            @Html.LabelFor(model => model.EmployeeLeaveDetails.LeaveStatus, htmlAttributes: new { @class = " col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.EmployeeLeaveDetails.LeaveStatus, Model.LeaveStatusEnums, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeLeaveDetails.ApprovedBy, new { @class = " col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.EmployeeLeaveDetails.ApprovedPersonName, new { @readonly = "readonly" })
                                @Html.HiddenFor(model => model.EmployeeLeaveDetails.ApprovedPersonName)
                                @Html.HiddenFor(model => model.EmployeeLeaveDetails.ApprovedBy)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                &nbsp;&nbsp;<input type="button" value="Apply" class="btn btn-default leaveApply" />
                            </div>
                        </div>

                        <div class="modal fade" id="leaveModal">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h4>Confirmation</h4>
                                    </div>
                                    <div class="modal-body">
                                        Are you sure, you want to apply for leave?
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" id="btnCancel" class="btn modalpopupbtn" data-dismiss="modal">Cancel</button>
                                        <button type="submit" id="btnOK" class="btn modalpopupbtn">Ok</button> &nbsp;&nbsp;

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal fade" id="leaveTypeValidationModal">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h4>Confirmation</h4>
                                    </div>
                                    <div class="modal-body">
                                        Not eligible for this leave.
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" id="btnCancelleaveTypeValidationModal" class="btn modalpopupbtn" data-dismiss="modal">Cancel</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="row ">
                    <div class="col-md-12">
                        @Html.ActionLink("Back to List", "Index", new { id = HttpCurrentUser.EmployeeId })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div>
                <table class="table table-bordered">

                    <thead>
                        <tr>
                            <th>Leave Type</th>
                            <th>Opening Balance</th>
                            <th>Leave Taken</th>
                            <th>Balance</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.HolidayEntitlements)
                        {
                            <tr>
                                <td>@item.LeaveType</td>
                                <td>@item.OpeningBalance</td>
                                <td>@item.LeaveTaken</td>
                                <td>@item.Balance</td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div> 
        </div>
    </div>
}

@section Scripts {
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script>

        $(document).ready(function () {
            $('.nav #Leaves').addClass('active');
            $('.sub-menu a').removeClass('active-btn');
            $(".createLeave").addClass('active-btn');
           

            $("#btnOK").click(function () {
                $("#leaveModal").modal('hide');
                $("#EmployeeLeaveDetails_LeaveStatus").val("2");
                onBegin();
            });

            $("#btnCancel").click(function () {
                $("#leaveModal").modal('hide');
            });

            $("#btnCancelleaveTypeValidationModal").click(function () {
                $("#leaveModal").modal('hide');
            });

            $('#EmployeeLeaveDetails_IsHalfDay').click(function () {
                if ($(this).is(':checked')) {
                    $("#EmployeeLeaveDetails_NoOfDays").val(0.5);
                } else {
                    $("#EmployeeLeaveDetails_NoOfDays").val(1);
                }
            });

            $("#EmployeeLeaveDetails_JoiningDate").datepicker().on("changeDate", function (e) {
                $(this).datepicker("hide");
            });

            $("#EmployeeLeaveDetails_LeaveStartDate").datepicker({
                dateFormat: 'dd-M-yy',
                changeMonth: true,
                changeYear: true,
                constrainInput: true,
                onSelect: function () {
                    $("#EmployeeLeaveDetails_NoOfDays").val("");
                    var start = $("#EmployeeLeaveDetails_LeaveStartDate").datepicker("getDate");
                    var end = $("#EmployeeLeaveDetails_LeaveEndDate").datepicker("getDate");

                    if (end == null)
                        return;
                    if (end >= start) {
                        GetActualLeave();
                    } else {
                        alert("Start Date is greater than End Date");
                        $("#EmployeeLeaveDetails_LeaveStartDate").val("");
                    }
                }
            }).val();

            $("#EmployeeLeaveDetails_LeaveEndDate").datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                changeYear: true,
                constrainInput: true,
                onSelect: function () {
                    $("#EmployeeLeaveDetails_NoOfDays").val("");
                    var start = $("#EmployeeLeaveDetails_LeaveStartDate").datepicker("getDate");
                    var end = $("#EmployeeLeaveDetails_LeaveEndDate").datepicker("getDate");
                    if (start == null)
                        return;
                    if (end >= start) {
                        GetActualLeave();
                    } else {
                        $("#EmployeeLeaveDetails_LeaveEndDate").val("");
                        alert("Start Date is greater than End Date");
                    }
                }
            }).val();


            $("#EmployeeLeaveDetails_HalfDayDateUTC").datepicker({
                dateFormat: 'dd-M-yy',
                changeMonth: true,
                changeYear: true,
                constrainInput: true
            }).val();
        });

        $(".leaveApply").click(function () {
            CheckValidLeaveType();
        });

        function formattedDate(date) {
            var data = date.split("-");
            return data[1] + "/" + data[0] + "/" + data[2];
        }


        function GetActualLeave() {
            var url = "/Leave/GetActualLeaveDaysCount";
            var start = formattedDate($("#EmployeeLeaveDetails_LeaveStartDate").val());
            var end = formattedDate($("#EmployeeLeaveDetails_LeaveEndDate").val());
            //$.ajax({
            //    url: url,
            //    data: { startDate: start, endDate: end },
            //    cache: false,
            //    dataType: "Json",
            //    type: "POST",
            //    success: function(data) {
            //        //alert("result : " + data["Value"]);
            //        $("#EmployeeLeaveDetails_NoOfDays").val(data["Value"]);
            //    },
            //    error: function(response) {
            //        alert("Error Occurred ");
            //    }
            //});

            $.get(url,
                { startDate: start, endDate: end },
                function (data) {
                    $("#EmployeeLeaveDetails_IsHalfDay").prop("disabled", true);
                    $("#EmployeeLeaveDetails_IsHalfDay").prop("checked", false);
                    if (data.Value === 1) {
                        $("#EmployeeLeaveDetails_IsHalfDay").prop("disabled", false);
                        $("#EmployeeLeaveDetails_HalfDayDateUTC").val($("#EmployeeLeaveDetails_LeaveStartDate").val());
                    }
                    $("#EmployeeLeaveDetails_NoOfDays").val(data.Value);
                });
        }

        function CheckValidLeaveType() {
            var url = '../GetApplicableLeaveType';
            var employeeLeaveObject = {
                EmployeeId : @Model.EmployeeLeaveDetails.EmployeeId,
                LeaveStartDate : formattedDate($("#EmployeeLeaveDetails_LeaveStartDate").val()),
                LeaveEndDate :formattedDate($("#EmployeeLeaveDetails_LeaveEndDate").val()),
                NoOfDays:$("#EmployeeLeaveDetails_NoOfDays").val(),
                LeaveTypeName:$("#EmployeeLeaveDetails_LeaveTypeId").find("option:selected").text()
            }

            $.ajax({
                url: url,
                data: { employeeLeave:employeeLeaveObject},
                cache: false,
                dataType: "Json",
                type: "POST",
                success: function(data) {
                    if (data) {
                        $("#leaveModal").modal('show');
                    } else {
                        $("#leaveTypeValidationModal").modal('show');
                    }
                },
                error: function(response) {
                    alert("Error Occurred ");
                }
            });
        }
    </script>
}
